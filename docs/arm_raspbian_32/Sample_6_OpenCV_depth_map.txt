Sample 6, to work with OpenCV to show depth map with minimum dependencies, no PCL required and no point cloud visualization.

Prerequisites:

  Rastberry Pi (2, 3, 4)
  Rastbian
  cmake 3.5 +
  boost 1.55 +
  
Install dependencies

1. Install cmake and boost

  >> sudo apt install cmake

  >> sudo apt install libboost-all-dev
  
2. Install OpenCV

  >> ssudo apt update
  >> ssudo apt upgrade

  >> ssudo apt install cmake build-essential pkg-config git

  >> ssudo apt install libjpeg-dev libtiff-dev libjasper-dev libpng-dev libwebp-dev libopenexr-dev
  >> ssudo apt install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libdc1394-22-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

  >> ssudo apt install libgtk-3-dev libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5

  >> ssudo apt install libatlas-base-dev liblapacke-dev gfortran

  >> ssudo apt install libhdf5-dev libhdf5-103

  >> ssudo apt install python3-dev python3-pip python3-numpy

  >> ssudo nano /etc/dphys-swapfile

  ### Find
  ### CONF_SWAPSIZE=100
  ### Replace With

  ### CONF_SWAPSIZE=2048

  ### Once changed, save the file by pressing CTRL+X followed by Y then Enter.

  >> sudo systemctl restart dphys-swapfile

  >> git clone https://github.com/opencv/opencv.git
  >> git clone https://github.com/opencv/opencv_contrib.git

  >> mkdir build && cd build

  >> cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv/opencv_contrib/modules \
    -D ENABLE_NEON=ON \
    -D ENABLE_VFPV3=ON \
    -D BUILD_TESTS=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D CMAKE_SHARED_LINKER_FLAGS=-latomic \
    -D BUILD_EXAMPLES=OFF ../opencv

  >> make -j$(nproc)

  >> sudo make install

  >> sudo ldconfig

  >> ssudo nano /etc/dphys-swapfile

  ### Find
  ### CONF_SWAPSIZE=2048
  ### Replace With

  ### CONF_SWAPSIZE=100

  ### Once changed, save the file by pressing CTRL+X followed by Y then Enter.

  >> sudo systemctl restart dphys-swapfile


Build and run sample application

1. Plug in the sensor, and set USB permission:

  >> sudo chmod a+rw /dev/ttyACM0

2. Extract VSEMI_TOF_SDK.zip into /home directory, there should be: ~/VSEMI_TOF_SDK

3. Build sample desktop application:

  >> cd ~/VSEMI_TOF_SDK/samples/sample6

  >> mkdir build && cd build

  >> cmake .. -DVSEMI_TARGET_PLATFORM=arm_raspbian_32

  >> make

4. To start the sample desktop application, run command:

  >> cd ~/VSEMI_TOF_SDK/samples/sample6/build

  >> ./vsemi_tof_cam

5. To stop the application, press Esc key when the depth map window active, or use mouse to close the point cloud window.


